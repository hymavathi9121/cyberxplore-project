{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\cyberxplore-project\\\\frontend\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const prevResults = useRef({});\n  const fetchFiles = async () => {\n    const res = await axios.get('http://localhost:5000/api/files');\n    const newFiles = res.data;\n\n    // Alert on new scans\n    newFiles.forEach(file => {\n      if (file.status === 'scanned' && prevResults.current[file._id] !== 'scanned') {\n        alert(`Scan complete: ${file.filename} → ${file.result.toUpperCase()}`);\n      }\n    });\n    const results = {};\n    newFiles.forEach(f => results[f._id] = f.status);\n    prevResults.current = results;\n    setFiles(newFiles);\n  };\n  useEffect(() => {\n    fetchFiles();\n    const interval = setInterval(fetchFiles, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const filteredFiles = files.filter(f => {\n    if (filter === 'all') return true;\n    return f.result === filter || filter === 'pending' && f.status === 'pending';\n  });\n  const getStatusColor = status => {\n    if (status === 'pending') return 'gray';\n    if (status === 'scanned') return 'blue';\n    return 'black';\n  };\n  const getResultColor = result => {\n    if (result === 'clean') return 'green';\n    if (result === 'infected') return 'red';\n    return 'gray';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"File Scan Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setFilter(e.target.value),\n      className: \"filter-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"all\",\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"clean\",\n        children: \"Clean\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"infected\",\n        children: \"Infected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"pending\",\n        children: \"Pending\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"scan-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Filename\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Uploaded At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Scanned At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredFiles.map(f => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: f.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              color: getStatusColor(f.status)\n            },\n            children: f.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              color: getResultColor(f.result)\n            },\n            children: f.result || '-'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(f.uploadedAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: f.scannedAt ? new Date(f.scannedAt).toLocaleString() : '—'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, f._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"15IKGzSY8akzGdcWPqznxIAa0Pc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","Dashboard","_s","files","setFiles","filter","setFilter","prevResults","fetchFiles","res","get","newFiles","data","forEach","file","status","current","_id","alert","filename","result","toUpperCase","results","f","interval","setInterval","clearInterval","filteredFiles","getStatusColor","getResultColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","style","color","Date","uploadedAt","toLocaleString","scannedAt","_c","$RefreshReg$"],"sources":["C:/Users/User/cyberxplore-project/frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport './Dashboard.css';\r\n\r\nfunction Dashboard() {\r\n  const [files, setFiles] = useState([]);\r\n  const [filter, setFilter] = useState('all');\r\n  const prevResults = useRef({});\r\n\r\n  const fetchFiles = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/files');\r\n    const newFiles = res.data;\r\n\r\n    // Alert on new scans\r\n    newFiles.forEach(file => {\r\n      if (file.status === 'scanned' && prevResults.current[file._id] !== 'scanned') {\r\n        alert(`Scan complete: ${file.filename} → ${file.result.toUpperCase()}`);\r\n      }\r\n    });\r\n\r\n    const results = {};\r\n    newFiles.forEach(f => results[f._id] = f.status);\r\n    prevResults.current = results;\r\n\r\n    setFiles(newFiles);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFiles();\r\n    const interval = setInterval(fetchFiles, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const filteredFiles = files.filter(f => {\r\n    if (filter === 'all') return true;\r\n    return f.result === filter || (filter === 'pending' && f.status === 'pending');\r\n  });\r\n\r\n  const getStatusColor = status => {\r\n    if (status === 'pending') return 'gray';\r\n    if (status === 'scanned') return 'blue';\r\n    return 'black';\r\n  };\r\n\r\n  const getResultColor = result => {\r\n    if (result === 'clean') return 'green';\r\n    if (result === 'infected') return 'red';\r\n    return 'gray';\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>File Scan Dashboard</h2>\r\n\r\n      <select onChange={e => setFilter(e.target.value)} className=\"filter-select\">\r\n        <option value=\"all\">All</option>\r\n        <option value=\"clean\">Clean</option>\r\n        <option value=\"infected\">Infected</option>\r\n        <option value=\"pending\">Pending</option>\r\n      </select>\r\n\r\n      <table className=\"scan-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Filename</th>\r\n            <th>Status</th>\r\n            <th>Result</th>\r\n            <th>Uploaded At</th>\r\n            <th>Scanned At</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredFiles.map(f => (\r\n            <tr key={f._id}>\r\n              <td>{f.filename}</td>\r\n              <td style={{ color: getStatusColor(f.status) }}>{f.status}</td>\r\n              <td style={{ color: getResultColor(f.result) }}>{f.result || '-'}</td>\r\n              <td>{new Date(f.uploadedAt).toLocaleString()}</td>\r\n              <td>{f.scannedAt ? new Date(f.scannedAt).toLocaleString() : '—'}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}