{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\cyberxplore-project\\\\frontend\\\\src\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState('');\n  const [progress, setProgress] = useState(0);\n  const uploadFile = async () => {\n    if (!file) {\n      alert('Please select a file first.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      await axios.post('http://localhost:5000/api/upload', formData, {\n        onUploadProgress: event => {\n          const percent = Math.round(event.loaded * 100 / event.total);\n          setProgress(percent);\n        }\n      });\n      setMessage('Scan in progress...');\n      setFile(null);\n      setProgress(0);\n    } catch (error) {\n      console.error('Upload error:', error);\n      setMessage('Upload failed. Try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".pdf,.docx,.jpg,.png\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: uploadFile,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Uploading: \", progress, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"lo/w8NdjJg/LI71y3qXIgAUuVTE=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Upload","_s","file","setFile","message","setMessage","progress","setProgress","uploadFile","alert","formData","FormData","append","post","onUploadProgress","event","percent","Math","round","loaded","total","error","console","children","type","accept","onChange","e","target","files","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/cyberxplore-project/frontend/src/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Upload() {\r\n  const [file, setFile] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  const uploadFile = async () => {\r\n    if (!file) {\r\n      alert('Please select a file first.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/api/upload', formData, {\r\n        onUploadProgress: (event) => {\r\n          const percent = Math.round((event.loaded * 100) / event.total);\r\n          setProgress(percent);\r\n        }\r\n      });\r\n      setMessage('Scan in progress...');\r\n      setFile(null);\r\n      setProgress(0);\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      setMessage('Upload failed. Try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        accept=\".pdf,.docx,.jpg,.png\"\r\n        onChange={(e) => setFile(e.target.files[0])}\r\n      />\r\n      <button onClick={uploadFile}>Upload</button>\r\n      {progress > 0 && <p>Uploading: {progress}%</p>}\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACN,IAAI,EAAE;MACTO,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,IAAI,CAAC;IAE7B,IAAI;MACF,MAAML,KAAK,CAACgB,IAAI,CAAC,kCAAkC,EAAEH,QAAQ,EAAE;QAC7DI,gBAAgB,EAAGC,KAAK,IAAK;UAC3B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEH,KAAK,CAACI,MAAM,GAAG,GAAG,GAAIJ,KAAK,CAACK,KAAK,CAAC;UAC9Db,WAAW,CAACS,OAAO,CAAC;QACtB;MACF,CAAC,CAAC;MACFX,UAAU,CAAC,qBAAqB,CAAC;MACjCF,OAAO,CAAC,IAAI,CAAC;MACbI,WAAW,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrChB,UAAU,CAAC,2BAA2B,CAAC;IACzC;EACF,CAAC;EAED,oBACEN,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,sBAAsB;MAC7BC,QAAQ,EAAGC,CAAC,IAAKxB,OAAO,CAACwB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFlC,OAAA;MAAQmC,OAAO,EAAE1B,UAAW;MAAAe,QAAA,EAAC;IAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3C3B,QAAQ,GAAG,CAAC,iBAAIP,OAAA;MAAAwB,QAAA,GAAG,aAAW,EAACjB,QAAQ,EAAC,GAAC;IAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC7C7B,OAAO,iBAAIL,OAAA;MAAAwB,QAAA,EAAInB;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAAChC,EAAA,CA1CQD,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AA4Cf,eAAeA,MAAM;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}